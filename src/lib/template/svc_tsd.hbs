// package: {{{packageName}}}
// file: {{{fileName}}}

{{#each imports}}
{{{this}}}
{{/each}}
{{#each services}}

interface I{{{serviceName}}}Service {
    {{#each methods}}
    {{lcFirst methodName}}: I{{{methodName}}};
    {{/each}}
}

    {{#each methods}}
interface I{{{methodName}}} {
    path: string; // "/{{{packageName}}}.{{{serviceName}}}/{{{methodName}}}"
    requestStream: boolean; // {{{requestStream}}}
    responseStream: boolean; // {{{responseStream}}}
    requestType: {{{requestTypeName}}},
    responseType: {{{responseTypeName}}},
    requestSerialize: (arg: {{{requestTypeName}}}) => Buffer;
    requestDeserialize: (buffer: Uint8Array) => {{{requestTypeName}}};
    responseSerialize: (arg: {{{responseTypeName}}}) => Buffer;
    responseDeserialize: (buffer: Uint8Array) => {{{responseTypeName}}};
}
    {{/each}}

export const {{{serviceName}}}Service: I{{{serviceName}}}Service;
export class {{{serviceName}}}Client extends grpc.Client {
    {{#each methods}}
    {{lcFirst methodName}}(request: {{{requestTypeName}}}, callback: (error: Error | null, response: {{{requestTypeName}}}) => void);
    {{/each}}
}
{{/each}}